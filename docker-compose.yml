version: "3"
services:

    airflow-webserver:
        hostname: airflow
        container_name: airflow
        image: andrejunior/airflow-spark:latest
        restart: always
        networks:
            - airflow
        depends_on:
            - postgres
            - minio
            - spark-master
            - spark-worker
        environment:   
            - AIRFLOW__CORE__LOAD_EXAMPLES=False
            - LOAD_EX=n
            - EXECUTOR=Local    
        volumes:
            - airflow-data:/usr/local/airflow/data
            - ./src/dags:/usr/local/airflow/dags
            - ./src/spark/applications:/usr/local/spark/applications            
            - ./src/spark/assets:/usr/local/spark/assets     
        ports:
            - "8085:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    postgres:
        hostname: postgres
        container_name: postgres
        image: 'postgres:14-bullseye'
        environment:
            POSTGRES_USER: 'airflow'
            POSTGRES_PASSWORD: 'airflow'
            POSTGRES_DB: 'airflow'
            PGDATA: /data/postgres
        volumes:
            - postgres:/data/postgres
        ports:
            - "5432:5432"
        networks:
            - airflow
        restart: on-failure
        healthcheck:
            test: ["CMD", "pg_isready"]
            interval: 60s
            timeout: 20s
            retries: 3
        deploy:
          resources:
            limits:
              memory: 400MB

    minio:
        hostname: bucket 
        container_name: bucket
        image: 'minio/minio:latest'
        environment:
            MINIO_ROOT_USER: airflow
            MINIO_ROOT_PASSWORD: airflow
        ports:
            - '9000:9000'
            - '9001:9001'
        volumes:
            - minio_data:/data
        networks:
            - airflow
        healthcheck:
            test: ["CMD", "curl", "-f", "http://bucket:9000/minio/health/live"]
            interval: 60s
            timeout: 20s
            retries: 3
        deploy:
          resources:
            limits:
              memory: 400MB

    createbuckets:
        image: minio/mc
        networks:
            - airflow
        depends_on:
            - minio
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc config host add myminio http://bucket:9000 airflow airflow;
            /usr/bin/mc rm -r --force myminio/airflow;
            /usr/bin/mc mb myminio/airflow;
            /usr/bin/mc policy download myminio/airflow;
            exit 0;
            "

    spark-master:
        image: spark:3.5.3
        container_name: spark-master
        hostname: spark-master
        ports:
        - "8081:8080"  # Spark UI
        - "7077:7077"  # Spark Master port
        volumes:
        - ./src/spark/applications:/opt/spark-apps
        - ./src/spark/assets:/opt/spark-assets
        networks:
        - airflow

    spark-worker:
        image: spark:3.5.3
        container_name: spark-worker
        hostname: spark-worker
        environment:
        - SPARK_MASTER=spark://spark-master:7077
        depends_on:
        - spark-master
        volumes:
        - ./src/spark/applications:/opt/spark-apps
        - ./src/spark/assets:/opt/spark-assets
        networks:
        - airflow

    mongo:
        image: mongo:latest
        container_name: mongo
        hostname: mongo
        ports:
            - "27017:27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: airflow
            MONGO_INITDB_ROOT_PASSWORD: airflow
            MONGO_DB_USERNAME: airflow
            MONGO_DB_PASSWORD: airflow
        volumes:
            - mongo_data:/data/db
        networks:
            - airflow


volumes:
    postgres:
    airflow-data:
    minio_data:
    mongo_data:

networks:
    airflow:
        driver: bridge
